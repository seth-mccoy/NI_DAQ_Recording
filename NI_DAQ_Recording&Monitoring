import nidaqmx
from nidaqmx.constants import (
    AcquisitionType, ChannelType, UsageTypeAI, UsageTypeCI, EveryNSamplesEventType,READ_ALL_AVAILABLE, UsageTypeCO, _Save)
import time
from timeit import default_timer as timer
import xlwt
from xlwt import Workbook
import datetime
import easygui
Test = True

while not easygui.ynbox('Do you have NI Max Installed?','Do you?', ('YES','NO'),r"C:\Users\seth.mccoy\Pictures\Camera Roll\NI Max Logo.jpg"):
    easygui.msgbox('Go install NI Max!','What are you even doing?','OK')

print('Great!')
print('Initilizing DAQ')
sys=nidaqmx.system.System.local()
task=nidaqmx.Task('AcquireTemp')
measurement={}
measurement['Timestamp']=[]
task.timing.cfg_samp_clk_timing(50000, samps_per_chan=25000)
for devices in sys.devices: #This for loop checks to see if the DAQ is a USB DAQ or a cDAQ (9181 or 9184) then ask user to check if DAQ is reserved
    deviceSelect = easygui.multchoicebox('Please select the DAQ you are using','DAQ Selection',('USB cDAQ','cDAQ9181','cDAQ9184','Other'))
    if deviceSelect == 'cDAQ9181' or 'cDAQ184':
        pass
    elif deviceSelect == 'USB cDAQ':
        pass
    else:
        easygui.msgbox('The DAQ you are currently using is not supported by this program. The current supported DAQ is: USB cDAQ, cDAQ9181, & cDAQ9184')
        exit()

deviceMap={dev.name: i for (i, dev) in enumerate(sys.devices)}

if len(deviceSelect) == 1:
        devices = easygui.ynbox(f'Is {sys.devices} the device DAQ you are using?','Is this your device?',('Yes','No'),)
        if devices == True:
            sys.devices[0].reserve_network_device(True) #should sys.devices[X] be 0 or is there a way 
            pass
        else:
            easygui.msgbox('Check your IP to ensure it matches the subnet mask of the DAQ and that the connection between your PC and the device is stable. Else, not sure what to tell you', 'Something is not right', "OK")
elif len(deviceSelect) >= 2:
        devices=easygui.multchoicebox('Choose the devices you are using','DI DAQ(s) Selection', [dev.name for dev in sys.devices])
else:
    easygui.msgbox('No devices are detected, check to ensure there is a stable commection between your PC and the DAQ', 'NO DEVICE DETECTED', 'OK')
    exit()

assert len(deviceSelect) == 1, 'multiple DAQs are not currently supported'
#for device in devices:
    #dev=sys.devices[deviceMap[devices]]
    
TCs = easygui.integerbox('How many thermocouples do you have (1-24)?', 'Number of thermocouples', lowerbound = 1, upperbound = 24)

for i in range (TCs):
    task.ai_channels.add_ai_thrmcpl_chan(f'{dev.name}/ai{i}',f'Temp{i}',min_val = float(0),max_val = float(100))
    measurement[f'Temperature {i}']=[]

print('DAQ initilization complete')

# while Test == True:


#Up to date as of this point
    #Ideas: Impliment Pandas rather than xlwt
    
init=timer()
wb = Workbook()
row=0
column=0
sheet1 = wb.add_sheet('Test Data2')
sheet1.write(row,column,'Timestamp')
column=column+1
sheet1.write(row,column,'Temperature 0')
column=column+1
sheet1.write(row,column,'Temperature 1')
column=column+1
sheet1.write(row,column,'Temperature 2')
column=column+1
sheet1.write(row,column,'Temperature 3')
column=column+1
sheet1.write(row,column,'Temperature 4')
row=row+1
column=0

while Test==True:
    ls=task.read()
    timestamp=timer()-init 
    print('New Data Set')
    Temperature=ls

    if Temperature == 0:
        task.close()
        break

    if timestamp >= 0 and timestamp <= 59:
        measurement['Timestamp'].append(timestamp)
        sheet1.write(row,column,timestamp)
        column=column+1
        measurement['Temperature 0'].append(ls[0])
        print('temperature0 = ')
        print(ls[0])
        sheet1.write(row,column,ls[0])
        column=column+1
        measurement['Temperature 1'].append(ls[1])
        print('temperature1 = ')
        print(ls[1])
        sheet1.write(row,column,ls[1])
        column=column+1
        measurement['Temperature 2'].append(ls[2])
        print('temperature2 = ')
        print(ls[2])
        sheet1.write(row,column,ls[2])
        column=column+1
        measurement['Temperature 3'].append(ls[3])
        print('temperature3 = ')
        print(ls[3])
        sheet1.write(row,column,ls[3])
        column=column+1
        measurement['Temperature 4'].append(ls[4])
        print('temperature4 = ')
        print(ls[4])
        sheet1.write(row,column,ls[4])
        row=row+1
        column=0  
        task.stop()
        time.sleep(0.125)
        task.start()
        task.read()
        time.sleep(0.125)


    elif timestamp >= 60:
        wb.save('TestFile')
        task.close()
        break   

    elif Test==False:
        wb.save('TestFile')
        task.close()
        break

    else:
        wb.save('TestFile')
        task.close()
        break
    